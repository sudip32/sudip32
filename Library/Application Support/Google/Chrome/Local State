{
   "app_list": {
      "app_launch_count": 0,
      "last_app_launch_ping": "13065062400000000",
      "last_launch_ping": "13065062400000000",
      "launch_count": 0
   },
   "apps": {
      "app_launcher": {
         "shortcut_version": 0
      }
   },
   "browser": {
      "enabled_labs_experiments": [  ],
      "last_redirect_origin": ""
   },
   "data_reduction": {
      "daily_original_length": [ "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "72111897", "24189342" ],
      "daily_original_length_via_data_reduction_proxy": [ "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0" ],
      "daily_original_length_with_data_reduction_proxy_enabled": [ "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0" ],
      "daily_received_length": [ "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "72111897", "24189342" ],
      "daily_received_length_https_with_data_reduction_proxy_enabled": [ "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0" ],
      "daily_received_length_long_bypass_with_data_reduction_proxy_enabled": [ "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0" ],
      "daily_received_length_short_bypass_with_data_reduction_proxy_enabled": [ "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0" ],
      "daily_received_length_unknown_with_data_reduction_proxy_enabled": [ "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0" ],
      "daily_received_length_via_data_reduction_proxy": [ "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0" ],
      "daily_received_length_with_data_reduction_proxy_enabled": [ "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0" ],
      "last_update_date": "13064955300000000"
   },
   "hardware_acceleration_mode_previous": true,
   "http_original_content_length": "96301239",
   "http_received_content_length": "96301239",
   "local_state": {
      "multiple_profile_prefs_version": 7
   },
   "network_time": {
      "network_time_mapping": {
         "local": 1420598889922.035,
         "network": 1420598853762.882
      }
   },
   "ntp": {
      "promo_resource_cache_update": "1420598890.525553"
   },
   "plugins": {
      "metadata": {
         "adobe-flash-player": {
            "displayurl": true,
            "group_name_matcher": "*Shockwave Flash*",
            "help_url": "https://support.google.com/chrome/?p=plugin_flash",
            "lang": "en-US",
            "mime_types": [ "application/futuresplash", "application/x-shockwave-flash" ],
            "name": "Adobe Flash Player",
            "url": "http://get.adobe.com/flashplayer/",
            "versions": [ {
               "reference": "http://www.adobe.com/support/security/bulletins/apsb12-03.html",
               "status": "up_to_date",
               "version": "11.1.102"
            } ]
         },
         "adobe-shockwave": {
            "group_name_matcher": "*Shockwave for Director*",
            "help_url": "https://support.google.com/chrome/?p=plugin_shockwave",
            "lang": "en-US",
            "mime_types": [ "application/x-director" ],
            "name": "Adobe Shockwave Player",
            "url": "http://fpdownload.macromedia.com/get/shockwave/default/english/macosx/latest/Shockwave_Installer_Full_64bit.dmg",
            "versions": [ {
               "reference": "http://www.adobe.com/support/security/bulletins/apsb12-17.html",
               "status": "requires_authorization",
               "version": "11.6.6.636"
            } ]
         },
         "apple-quicktime": {
            "displayurl": true,
            "group_name_matcher": "*QuickTime Plug-in*",
            "help_url": "https://support.google.com/chrome/?p=plugin_quicktime",
            "lang": "en-US",
            "mime_types": [ "application/sdp", "application/x-mpeg", "application/x-rtsp", "application/x-sdp", "audio/3ggp", "audio/3ggp2", "audio/aac", "audio/ac3", "audio/aiff", "audio/amr", "audio/basic", "audio/mid", "audio/midi", "audio/mp4", "audio/mpeg", "audio/vnd.qcelp", "audio/wav", "audio/x-aac", "audio/x-ac3", "audio/x-aiff", "audio/x-caf", "audio/x-gsm", "audio/x-m4a", "audio/x-m4b", "audio/x-m4p", "audio/x-midi", "audio/x-mpeg", "audio/x-wav", "image/jp2", "image/jpeg2000", "image/jpeg2000-image", "image/pict", "image/png", "image/x-jpeg2000-image", "image/x-macpaint", "image/x-pict", "image/x-png", "image/x-quicktime", "image/x-sgi", "image/x-targa", "video/3ggp", "video/3ggp2", "video/flc", "video/mp4", "video/mpeg", "video/quicktime", "video/sd-video", "video/x-m4v", "video/x-mpeg" ],
            "name": "QuickTime Player",
            "url": "http://www.apple.com/quicktime/download/",
            "versions": [ {
               "status": "requires_authorization",
               "version": "7.6.6"
            } ]
         },
         "divx-player": {
            "group_name_matcher": "*DivX Plus Web Player*",
            "help_url": "https://support.google.com/chrome/?p=plugin_divx",
            "lang": "en-US",
            "mime_types": [ "video/divx", "video/x-matroska" ],
            "name": "DivX Web Player",
            "url": "http://www.divx.com/en/downloads/divx/mac",
            "versions": [ {
               "status": "requires_authorization",
               "version": "2.2"
            } ]
         },
         "flip4mac": {
            "displayurl": true,
            "group_name_matcher": "*Flip4Mac*",
            "help_url": "https://support.google.com/chrome/?p=plugin_wmp",
            "lang": "en-US",
            "mime_types": [ "application/asx", "application/x-mplayer2", "application/x-ms-wmp", "audio/x-ms-wax", "audio/x-ms-wma", "video/x-ms-asf", "video/x-ms-asf-plugin", "video/x-ms-wm", "video/x-ms-wmv", "video/x-ms-wvx" ],
            "name": "Flip4Mac",
            "url": "http://www.microsoft.com/download/en/confirmation.aspx?id=9442",
            "versions": [ {
               "status": "requires_authorization",
               "version": "2.2.1"
            } ]
         },
         "google-chrome-pdf": {
            "group_name_matcher": "*Chrome PDF Viewer*",
            "mime_types": [  ],
            "name": "Chrome PDF Viewer",
            "versions": [ {
               "comment": "Chrome PDF Viewer has no version information.",
               "status": "up_to_date",
               "version": "0"
            } ]
         },
         "google-talk": {
            "group_name_matcher": "*Google Talk*",
            "mime_types": [  ],
            "name": "Google Talk",
            "versions": [ {
               "comment": "'Google Talk Plugin' and 'Google Talk Plugin Video Accelerator' use two completely different versioning schemes, so we can't define a minimum version.",
               "status": "up_to_date",
               "version": "0"
            } ]
         },
         "java-runtime-environment": {
            "displayurl": true,
            "group_name_matcher": "Java*",
            "help_url": "https://support.google.com/chrome/?p=plugin_java",
            "lang": "en-US",
            "mime_types": [ "application/x-java-applet", "application/x-java-applet,version=1.1", "application/x-java-applet,version=1.1.1", "application/x-java-applet,version=1.1.2", "application/x-java-applet,version=1.1.3", "application/x-java-applet,version=1.2", "application/x-java-applet,version=1.2.1", "application/x-java-applet,version=1.2.2", "application/x-java-applet,version=1.3", "application/x-java-applet,version=1.3.1", "application/x-java-applet,version=1.4", "application/x-java-applet,version=1.4.1", "application/x-java-applet,version=1.4.2", "application/x-java-applet,version=1.5", "application/x-java-applet,version=1.6", "application/x-java-bean", "application/x-java-bean,version=1.1", "application/x-java-bean,version=1.1.1", "application/x-java-bean,version=1.1.2", "application/x-java-bean,version=1.1.3", "application/x-java-bean,version=1.2", "application/x-java-bean,version=1.2.1", "application/x-java-bean,version=1.2.2", "application/x-java-bean,version=1.3", "application/x-java-bean,version=1.3.1", "application/x-java-bean,version=1.4", "application/x-java-bean,version=1.4.1", "application/x-java-bean,version=1.4.2", "application/x-java-bean,version=1.5", "application/x-java-bean,version=1.6", "application/x-java-vm" ],
            "name": "Java(TM)",
            "url": "http://java.com/en/download/apple_manual.jsp",
            "versions": [ {
               "comment": "Leopard",
               "status": "requires_authorization",
               "version": "12.8.0"
            }, {
               "status": "out_of_date",
               "version": "13"
            }, {
               "comment": "Snow Leopard",
               "status": "requires_authorization",
               "version": "13.5.0"
            }, {
               "status": "out_of_date",
               "version": "14"
            }, {
               "comment": "Lion",
               "status": "requires_authorization",
               "version": "14.0.3"
            } ]
         },
         "realplayer": {
            "group_name_matcher": "*RealPlayer*",
            "help_url": "https://support.google.com/chrome/?p=plugin_real",
            "lang": "en-US",
            "mime_types": [ "audio/vnd.rn-realaudio", "video/vnd.rn-realvideo", "audio/x-pn-realaudio-plugin", "audio/x-pn-realaudio" ],
            "name": "RealPlayer",
            "url": "http://director.real.com/realplayer?type=rpsp_mac",
            "versions": [ {
               "comment": "The Real Player plug-in for mac doesn't expose a version at all.",
               "status": "requires_authorization",
               "version": "0"
            } ]
         },
         "silverlight": {
            "displayurl": true,
            "group_name_matcher": "*Silverlight*",
            "lang": "en-US",
            "mime_types": [ "application/x-silverlight", "application/x-silverlight-2" ],
            "name": "Silverlight",
            "url": "http://go.microsoft.com/fwlink/?LinkID=149156",
            "versions": [ {
               "reference": "http://support.microsoft.com/kb/2668562",
               "status": "up_to_date",
               "version": "4.1.10111.0"
            } ]
         }
      },
      "resource_cache_update": "1420519057.623962"
   },
   "policy": {
      "last_statistics_update": "13064992598029092"
   },
   "profile": {
      "info_cache": {
         "Default": {
            "active_time": 1420600368.323933,
            "avatar_icon": "chrome://theme/IDR_PROFILE_AVATAR_26",
            "background_apps": false,
            "is_ephemeral": false,
            "is_omitted_from_profile_list": false,
            "is_using_default_avatar": true,
            "is_using_default_name": true,
            "managed_user_id": "",
            "name": "First user",
            "user_name": ""
         }
      },
      "last_active_profiles": [ "Default" ],
      "last_used": "Default"
   },
   "show-first-run-bubble-option": 0,
   "shutdown": {
      "num_processes": 0,
      "num_processes_slow": 0,
      "type": 0
   },
   "uninstall_metrics": {
      "installation_date2": "1420432596",
      "launch_count": "5"
   },
   "user_experience_metrics": {
      "low_entropy_source2": 4254,
      "session_id": 4,
      "stability": {
         "breakpad_registration_fail": 5,
         "child_process_crash_count": 0,
         "crash_count": 0,
         "debugger_not_present": 5,
         "execution_phase": 500,
         "exited_cleanly": false,
         "extension_renderer_crash_count": 0,
         "incomplete_session_end_count": 0,
         "last_timestamp_sec": "1420600387",
         "launch_count": 5,
         "launch_time_sec": "1420598885",
         "page_load_count": 0,
         "plugin_stats2": [ {
            "crashes": 0,
            "instances": 0,
            "launches": 20,
            "loading_errors": 0,
            "name": "Shockwave Flash"
         } ],
         "renderer_crash_count": 0,
         "renderer_hang_count": 0,
         "session_end_completed": true,
         "stats_buildtime": "1417790018",
         "stats_version": "39.0.2171.95-64"
      }
   },
   "variations_last_fetch_time": "13065072489925386",
   "variations_seed": "",
   "variations_seed_date": "13065072453000000",
   "variations_seed_signature": "MEQCIFYkjr6sWp0kJpSKBXQ3yI1iPP13IsOfRdX6EeNBZrN6AiB8hyDF0wokeeE5T0HmY+x3NBUtwSByPCDueJ5VlUV4uw==",
   "was": {
      "restarted": false
   }
}
